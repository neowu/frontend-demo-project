buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:7.15.0'
    }
}

// use gradlew -Penv=${env} to pass
def env = hasProperty('env') ? env : null

apply plugin: org.flywaydb.gradle.FlywayPlugin

tasks.withType(org.flywaydb.gradle.task.AbstractFlywayTask).configureEach {
    doFirst {
        flyway {
            configurations = ['runtimeClasspath'] // use runtimeOnly scope in actual db-migration project
            placeholderReplacement = false
            assert project.file('src/main/resources/db/migration').exists()

            def flywayProperties = env == null ? 'src/main/resources/flyway.properties' : "conf/${env}/resources/flyway.properties"
            assert project.file(flywayProperties).exists()

            def properties = new Properties()
            project.file(flywayProperties).withInputStream {
                properties.load(it)
            }
            properties.each { key, value ->
                project.ext[key as String] = value
            }
        }
    }
}
